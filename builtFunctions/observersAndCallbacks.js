// Callback function to execute when mutations are observed for puzzlesvar callback = function(mutations) {    console.log("callback");    if (deficienteVisual == true) {        let lastMoveMadeString = getLastMoveMade();        speech.text = lastMoveMadeString;        window.speechSynthesis.speak(speech);    }    let newFenPositionWhite = getPiecesToFEN();    let newFenPositionBlack = newFenPositionWhite.replace(/ w /, " b ");        console.log(newFenPositionWhite);    console.log(newFenPositionBlack);        // Start chessboard to follow the game on background    window['chessWhite'] = new Chess(newFenPositionWhite);    window['chessBlack'] = new Chess(newFenPositionBlack);}// Create an observer instance linked to the callback functionwindow['observer'] = new MutationObserver(callback);// Observe if moves list has changedfunction startObservingMoves() {    // get starting position    window['fenPositionWhite'] = getPiecesToFEN();    window['fenPositionBlack'] = fenPositionWhite.replace(/ w /, " b ");    console.log(fenPositionWhite);    console.log(fenPositionBlack);        // Start chessboard to follow the game on background    window['chessWhite'] = new Chess(fenPositionWhite);    window['chessBlack'] = new Chess(fenPositionBlack);    var targetNode = document.querySelector('.board');            // Options for the observer (which mutations to observe)    var config = {        attributes: true,        childList: true,        subtree: true    };        // Start observing the target node for configured mutations    observer.observe(targetNode, config);    }