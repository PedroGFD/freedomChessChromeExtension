window['freedomEnabled'] = false;    window['confirm'] = function(question, text, confirmButtonText, callback) {    Swal.fire({          title: question,          imageUrl: chrome.runtime.getURL('images/freedomChess.png'),          imageHeight: 100,          imageAlt: 'Freedom Logo',          text: text,          showCancelButton: true,          confirmButtonColor: '#3085d6',          cancelButtonColor: '#d33',          confirmButtonText: confirmButtonText,    }).then((confirmed) => {        callback(confirmed && confirmed.value == true);    });}// switch enable/disable Freedom Modewindow['enableDisableFreedomMode'] = function() {        if (freedomEnabled == false) {            var question = 'Você deseja ativar o Modo Freedom?';        var text = "Você passará a falar os lances ao invés de usar o mouse.";        var confirmButtonText = 'Sim, ative!';                confirm(question, text, confirmButtonText, function (confirmed) {            if (confirmed) {                Swal.fire({                    icon: 'success',                    title: "Ativado!",                    text: "O modo Freedom está ativo.",                    showConfirmButton: false,                    timer: 1500                });                setTimeout(function(){                     enableFreedomMode();                }, 2000);                freedomEnabled = true;            }            else {                freedomEnabled = false;            }        });    }                else if (freedomEnabled == true) {        question = 'Você deseja desativar o Modo Freedom?';        text = "Você passará a fazer os lances com o mouse normalmente.";        confirmButtonText = 'Sim, desative!';                confirm(question, text, confirmButtonText, function (confirmed) {            if (confirmed) {                observer.disconnect();                 Swal.fire({                    icon: 'success',                    title: "Destivado!",                    text: "O modo Freedom foi desativado.",                    showConfirmButton: false,                    timer: 1500                });                freedomEnabled = false;            }            else {                freedomEnabled = true;            }        });    }    return;}// button click behaviorbutton.addEventListener("click", function(){    enableDisableFreedomMode();}, false);